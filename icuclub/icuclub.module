<?php

/**
 * @file
 * Module file for icuclub_module.
 */

// Registered URLs for this club
function icuclub_menu() {
  $items['icuclub_cleancache/%'] = array(
    'page callback' => 'icuclub_clean_atoz', // Page function
    'page arguments' => array(1), // The centre is the 2nd parameter (starting at 0)
    'type' => MENU_CALLBACK, // Do not show menu item
    'access callback' => TRUE, // Page always accessible
  );

  $items['icuclub_cleancache/%/club/%'] = array(
    'page callback' => 'icuclub_clean_club', // Page function
    'page arguments' => array(1), // The centre is the 2nd parameter (starting at 0)
    'type' => MENU_CALLBACK, // Do not show menu item
    'access callback' => TRUE, // Page always accessible
  );

  $items['activities/a-to-z'] = array(
    'page callback' => 'icuclub_atoz', // Page function
    'menu_name' => 'menu-a', // Inject into activities menu
    'title' => 'A to Z',
    'access callback' => TRUE, // Page always accessible
  );

  $items['activities/a-to-z/%'] = array(
    'page callback' => 'icuclub_club', // Page function
    'page arguments' => array(2), // The centre is the 2nd parameter (starting at 0)
    'type' => MENU_CALLBACK, // Do not show menu item
    'access callback' => TRUE, // Page always accessible
  );

  $items['activities/a-to-z/%/image'] = array(
    'page callback' => 'icuclub_club_image', // Page function
    'page arguments' => array(2), // The centre is the 2nd parameter (starting at 0)
    'type' => MENU_CALLBACK, // Do not show menu item
    'access callback' => TRUE, // Page always accessible
  );

  $items['admin/config/system/icuclub'] = array( // This positions it in configuration -> system
	'title' => t('ICU Club Hander'), // Page title, also shown as menu title
    'description' => t('Settings relating to the A-Z of activites, club blocks, and club pages'),
	'page callback' => 'drupal_get_form', // Signifies a form page
	'page arguments' => array('icuclub_admin'), // Form is here
    'type' => MENU_NORMAL_ITEM, // Do show menu item
	'access arguments' => array('access administration pages'), // Admins only
  );

  return $items;
}

// Admin page
function icuclub_admin() {
  $form = array();

  $form['icuclub_apikey'] = array(
    '#type' => 'textfield',
    '#title' => t('API Key'),
    '#default_value' => variable_get('icuclub_apikey'),
    '#description' => t("API key for eActivities to delete page caches - do not change without also changing the eActivities code or changes to club pages will not show"),
    '#required' => TRUE,
  );

  $form['icuclub_atoz_intro'] = array(
    '#type' => 'textarea',
    '#title' => t('A-Z Introduction'),
    '#default_value' => variable_get('icuclub_atoz_intro'),
    '#description' => t("Introductory text for the CSP A-Z page, note that the value you specify here will be enclosed in paragraph tags when displayed"),
    '#required' => TRUE,
  );

  $form['icuclub_atoz_about'] = array(
    '#type' => 'textarea',
    '#title' => t('A-Z About text'),
    '#default_value' => variable_get('icuclub_atoz_about'),
    '#description' => t("Text for the 'About our clubs and societies' part of the A-z. Note that the value you specify here will be enclosed in paragraph tags when displayed"),
    '#required' => TRUE,
  );

  $form['icuclub_filter'] = array(
    '#type' => 'textfield',
    '#title' => t('Centres to ignore'),
    '#default_value' => variable_get('icuclub_filter'),
    '#description' => t("Comma separated list of centres to ignore in the A-Z list, the membership and club blocks, as well as club pages not to show. Example syntax: 123,456. If there is only one centre to ignore, simply enter its number"),
    '#required' => FALSE,
  );


  return system_settings_form($form); // this will also save
}

// Build list of clubs logged in user is a member of
function icuclub_gen_memberships() {
  global $user;
  global $icuclub_memberships;

  $icuclub_memberships = array();

  if(!user_is_logged_in()) {
    return; // not logged in
  }

  if(!erpol_connect()) {
    return;
  }

  $username = mssql_escape($user->name);

  // Find all memberships in the current year
  $curryear = (int) date('Y', time());
  $sql = "
SELECT [CurrClubHealth].[Centre]	    ,[OCNames].[OCNameTypeName]FROM [PeopleClubMemberships]  INNER JOIN [CurrClubHealth] ON [PeopleClubMemberships].[OCDesc] = [CurrClubHealth].[OCDesc]	INNER JOIN [PeopleDetails] ON [PeopleClubMemberships].[CID] = [PeopleDetails].[CID]	INNER JOIN [OCNames] ON [CurrClubHealth].[OCID] = [OCNames].[OCID]	INNER JOIN [Years] ON [PeopleClubMemberships].[YearStart] = [Years].[YearStart]WHERE [PeopleDetails].[Login] = '".$username."'
	AND [CurrClubHealth].[StatusDesc] = 'Active'  AND [Years].[YearID] = '22'	
";

  $result = mssql_query($sql);
  if($result === TRUE || $result === FALSE) {
    return;
  }

  $socs = array();
  while($res = mssql_fetch_object($result)) {
    $icuclub_memberships[$res->Centre] = $res->OCNameTypeName;
  }
}

// Define templates
function icuclub_theme() {
    return array(
        'icuclub_club' => array( // name of theme
            'template' => 'icuclub_club' // name of template to load, .tpl.php will be added
        ),
        'icuclub_atoz' => array(
            'template' => 'icuclub_atoz'
        ),
        'icuclub_block_memberships' => array(
            'template' => 'icuclub_block_memberships'
        ),
        'icuclub_block_atoz' => array(
            'template' => 'icuclub_block_atoz'
        )
    );
}

// Define blocks
function icuclub_block_info() {
  $blocks['membership'] = array(
    'info' => t('Club membership'),
    'cache' => DRUPAL_NO_CACHE
  );

  $blocks['atoz'] = array(
    'info' => t('Club A to Z'),
    'cache' => DRUPAL_NO_CACHE
  );

  return $blocks;
}

// View blocks
function icuclub_block_view($delta = '') {
  switch ($delta) {
    case 'membership':
      $block['subject'] = t('My Clubs');
      $block['content'] = block_icuclub_membership($delta); // Load from function
      break;
    case 'atoz':
      $block['subject'] = t('Club, Society & Project A to Z');
      $block['content'] = block_icuclub_atoz($delta); // Load from function
      break;
  }
  return $block;
}

// Search hook: will find club pages
function icuclub_search_execute($keys = NULL, $conditions = NULL) {
  // Search club names and descriptions for the query and output values, luckily we can do this in one query so its nice and nippy

  if(!erpol_connect()) {
    return; // db down
  }

  $query = mssql_escape($keys);

$sql = "
SELECT [CurrClubHealth].[OCDesc]      ,[CurrClubHealth].[Centre]      ,[PreviousProfiles2].[YearDesc]      ,CAST ([PreviousProfiles2].[LargeProfile] AS TEXT) [LargeProfile]FROM [CurrClubHealth]  CROSS APPLY ( SELECT TOP 1 [PreviousProfiles].[YearDesc], [PreviousProfiles].[LargeProfile]                FROM [PreviousProfiles] WHERE [PreviousProfiles].[OCID] = [CurrClubHealth].[OCID]                ORDER BY [PreviousProfiles].[YearDesc] DESC              ) [PreviousProfiles2]WHERE [CurrClubHealth].[OCDesc] LIKE '%$query%'
  OR [LargeProfile] LIKE '%$query%'
  AND [StatusDesc] = 'Active'
";

  if(variable_get('icuclub_filter') != '' && variable_get('icuclub_filter') != NULL) {
    $filters = explode(',', variable_get('icuclub_filter'));

    foreach($filters as $filter) {
      if(!is_numeric($filter)): continue; endif; // Only numeric centres (i.e. no D/U etc.)
      $sql .= "AND [CurrClubHealth].[Centre] != '$filter'";
    }
  }

  $results_array = array();

  $result = mssql_query($sql);
  if($result !== TRUE && $result !== FALSE) {
    while($res = mssql_fetch_object($result)) {
      if(!is_numeric($res->Centre)) { continue; } // numeric centres
      preg_match('/(?<= )(.*)/', $res->OCDesc, $nicetitle);
      $results_array[$res->Centre] = array('title' => $nicetitle[0], 'link' => url('activities/a-to-z/'.$res->Centre), 'snippet' => search_excerpt($keys, $res->LargeProfile));
    }
  }

  return $results_array;
}

// Implement search mode
function icuclub_search_info() {
  return array(
    'title' => 'Activities', 
    'path' => 'activities', 
  );
}

/* Non-scaffold code is below */
// callback to clean atoz cache
function icuclub_clean_atoz($key) {
  // API key
  if($key != variable_get('icuclub_apikey')) {
    return 'bad key';
  }

  cache_clear_all('icuclub_cache_atoz', 'cache'); // For when we create a new club/delete/rename/change club category
  return 'ok';
}

// callback to clean page cache
function icuclub_clean_club($key, $centre) {
  if($key != variable_get('icuclub_apikey')) {
    return 'bad key';
  }

  if(!is_numeric($centre)) {
    return 'bad centre';
  }

  cache_clear_all('icuclub_cache_image_'.$centre, 'cache'); // For when a club profile and/or image changes
  cache_clear_all('icuclub_cache_page_'.$centre, 'cache');
  return 'ok';
}

// callback for atoz
function icuclub_atoz() {
  $intro = variable_get('icuclub_atoz_intro');
  $about = variable_get('icuclub_atoz_about');

  // See if we have got a cached copy of the A-Z, if we do, no point checking NewERPOL as this is time consuming
  if(!cache_get('icuclub_cache_atoz')) {
    // If we dont have a cache'd set, generate cache
    icuclub_genatoz();

    // If we don't have an object here, database is down on a cache refresh, cry
    if(!is_object(cache_get('icuclub_cache_atoz'))) {
      drupal_not_found();
      return;
    }
  }

  // No matter what happened before, we should have a cache now
  $cache = cache_get('icuclub_cache_atoz')->data;

  if(!is_array($cache)) {
    // No societies/some other error
    drupal_not_found();
    return;
  }

  $societies = $cache;

  drupal_set_title('Club, Society & Project A to Z');

  $output = theme("icuclub_atoz", array('atozintro' => $intro, 'atozabout' => $about, 'atozclubs' => $societies));
  return $output;
}

// callback for club image
function icuclub_club_image($centre) {
  // Club centres must be numeric
  if (!is_numeric($centre)) {
    drupal_not_found();
    return;  // We actually don't get here.
  }

  $centre = mssql_escape($centre);

  // See if we have got a cached copy of the image, if we do, no point checking NewERPOL as this is *VERY* time consuming (loading from the drupal cache seems a LOT faster)
  if(!cache_get('icuclub_cache_image_'.$centre)) {
    // Get the club name, status and profile by centre
    if(!erpol_connect()) {
      drupal_not_found();
      return; // db down
    }

    // Get the image in one super query
    $sql = "
SELECT TOP 1 [UpFiles].[UpFile]    ,[UpFiles].[FileType]
    ,[Years].[YearEnd]FROM [CurrClubHealth]    INNER JOIN [PreviousProfiles] ON [CurrClubHealth].[OCID] = [PreviousProfiles].[OCID]	  INNER JOIN [Years] ON [PreviousProfiles].[YearID] = [Years].[YearID]	  INNER JOIN [ProfileUpFiles] ON [PreviousProfiles].[ID] = [ProfileUpFiles].[ProfileID]  	INNER JOIN [UpFiles] ON [ProfileUpFiles].[ImageID] = [UpFiles].[ID]WHERE [CurrClubHealth].[Centre] = '$centre'    AND [CurrClubHealth].[StatusDesc] = 'Active'	  AND [Years].[YearID] = '22'
  ";
  
    // Remove unwanted clubs specified in config
    if(variable_get('icuclub_filter') != '' && variable_get('icuclub_filter') != NULL) {
      $filters = explode(',', variable_get('icuclub_filter'));
  
      foreach($filters as $filter) {
        if(!is_numeric($filter)): continue; endif; // Only numeric centres (i.e. no D/U etc.)
        $sql .= "AND [CurrClubHealth].[Centre] != '$filter'";
      }
    }
  
    $result = mssql_query($sql);
    if($result === TRUE || $result === FALSE) {
      drupal_not_found(); // No society
      return;
    }
  
    $res = mssql_fetch_object($result);
    if(!is_object($res)) {
      drupal_not_found(); // No society
      return;
    }
  
    cache_set('icuclub_cache_image_'.$centre, $res, NULL, strtotime($res->YearEnd)); // Expire it when we roll over year
  } else {
    $res = cache_get('icuclub_cache_image_'.$centre)->data;
  }
  header('Content-Type: '.$res->FileType);

  echo $res->UpFile;
  return;
}

// callback for page
function icuclub_club($centre) {
  // Club centres must be numeric
  if (!is_numeric($centre)) {
    drupal_not_found();
    return;  // We actually don't get here.
  }

  // Connect to database before cache as we still need membership counts from NewERPOL
  if(!erpol_connect()) {
    drupal_not_found();
    return; // db down
  }

  $centre = mssql_escape($centre);

  // Everything apart from membership counts can be obtained from the cache, so see if we cached it
  if(!cache_get('icuclub_cache_page_'.$centre)) {
    // No need to worry about escaping, we are numeric! Cast to avoid truncation
    $sql = "
SELECT [OCNames].[OCNameTypeName]
      ,[OffComms].[OCDesc]      ,[ProfileCategories].[ProfileCatDesc]      ,CAST ([PreviousProfiles].[LargeProfile] AS TEXT) [LargeProfile]
	   	,[OffComms].[Website]  		,[OffComms].[GeneralEmail]
      ,[Years].[YearID]
      ,[Years].[YearStart]
      ,[Years].[YearEnd]FROM [CurrClubHealth]  INNER JOIN [PreviousProfiles] ON [CurrClubHealth].[OCID] = [PreviousProfiles].[OCID]	INNER JOIN [OCNames] ON [CurrClubHealth].[OCID] = [OCNames].[OCID]	INNER JOIN [Years] ON [PreviousProfiles].[YearID] = [Years].[YearID]
  INNER JOIN [OffComms] ON [CurrClubHealth].[OCID] = [OffComms].[OCID]  LEFT OUTER JOIN [ProfileCategories] ON [ProfileCategories].[ProfileCatID] = [PreviousProfiles].[ProfileCategoryID]WHERE [CurrClubHealth].[Centre] = '$centre'  AND [CurrClubHealth].[StatusDesc] = 'Active'	AND [OCNames].[OCNameTypeId] = '1'	AND [Years].[YearID] = '22'
";
      // Remove unwanted clubs specified in config
    if(variable_get('icuclub_filter') != '' && variable_get('icuclub_filter') != NULL) {
      $filters = explode(',', variable_get('icuclub_filter'));
  
      foreach($filters as $filter) {
        if(!is_numeric($filter)): continue; endif; // Only numeric centres (i.e. no D/U etc.)
        $sql .= "AND [CurrClubHealth].[Centre] != '$filter'";
      }
    }
  
    $result = mssql_query($sql);
    if($result === TRUE || $result === FALSE) {
       drupal_not_found(); // No society
       return;
    }
  
    $res = mssql_fetch_object($result);
    if(!is_object($res)) {
       drupal_not_found(); // No society
       return;
    }
  
    // Load the theme icuclub_club with given parameters
    $nicetitle = $res->OCNameTypeName;
    $clubdesc = $res->LargeProfile;
    $OCDesc = $res->OCDesc;
    $YearID = $res->YearID;
    $YearStart = $res->YearStart;
    $YearEnd = $res->YearEnd;
  
    // Convert section name to a nicer format
    if($res->ProfileCatDesc == NULL) {
      $sectionname = "Unknown club type";
      $sectioncode = 'unknown';
    } else {
      $sectionname = $res->ProfileCatDesc;
      $sectioncode = strtolower(str_replace(' ', '_', str_replace('&', '_', $sectionname)));
    }
  
    // Contact Details
    if($res->GeneralEmail == null) {
      $email = t('No email address has been recorded');
    } elseif(strpos($res->GeneralEmail, '@') === FALSE) {
      $email = $res->GeneralEmail.'@imperial.ac.uk'; // If just a username
    } else {
      $email = $res->GeneralEmail;
    }
  
    if($res->Website == null) {
      $website = t('No website address has been recorded');
    } else {
      $website = '<a href="'.$res->Website.'">'.$res->Website.'</a>';
    }
  
    // Committee
    $sql = "
SELECT [PeoplePositions].[YearPost]	  ,[PeopleDetails].[FirstName]	  ,[PeopleDetails].[Surname]FROM [PeoplePositions]  INNER JOIN [PeopleDetails] ON [PeoplePositions].[PeopleID] = [PeopleDetails].[ID]  INNER JOIN [Years] ON [PeoplePositions].[YearStart] = [Years].[YearStart]WHERE [PeoplePositions].[OCDesc] = '$OCDesc'  AND [Years].[YearID] = '$YearID'
";
  
    $result = mssql_query($sql);
    if($result === TRUE || $result === FALSE) {
       drupal_not_found(); // No committee found means no society
       return;
    }
  
    $committee = array();
  
    while($res = mssql_fetch_object($result)) {
      $post = explode(' - ', $res->YearPost); // remove junk, keep position
      $committee[$post[1]] = $res->FirstName.' '.$res->Surname;
    }
  
    // Image
    // I removed this query as apparently it is required that images are submitted with the form, so we assume there is an image
  
    // Store in cache
    $cache = array('clubdesc' => $clubdesc, 'clubsection' => $sectioncode, 'clubsectionname' => $sectionname, 'clubemail' => $email, 'clubwebsite' => $website, 'clubhasimage' => true, 'clubcommittee' => $committee, 'nicetitle' => $nicetitle, 'OCDesc' => $OCDesc, 'YearID' => $YearID);
    cache_set('icuclub_cache_page_'.$centre, $cache, NULL, strtotime($YearStart));
  } else {
    // Load from cache
    $res = cache_get('icuclub_cache_page_'.$centre)->data;
    $clubdesc = $res['clubdesc'];
    $sectioncode = $res['clubsection'];
    $sectionname = $res['clubsectionname'];
    $email = $res['clubemail'];
    $website = $res['clubwebsite'];
    $hasimage = $res['clubhasimage'];
    $committee = $res['clubcommittee'];
    $OCDesc = $res['OCDesc'];
    $nicetitle = $res['nicetitle'];
    $YearID = $res['YearID'];
  }

  // Membership
  // Current
  
  $num_curr = 0;
  $num_last = 0;

  $sql = "
SELECT COUNT(*) [NumMemberships]	    ,[Years].[YearID]FROM [PeopleClubMemberships]  LEFT JOIN [Years] ON [PeopleClubMemberships].[YearStart] = [Years].[YearStart]WHERE [OCDesc] = '$OCDesc'  AND
  (       [Years].[YearID] = '$YearID'    OR [Years].[YearID] = '".($YearID - 1)."'  )GROUP BY [Years].[YearID]ORDER BY [Years].[YearID] ASC
";

  $result = mssql_query($sql);
  if($result !== TRUE && $result !== FALSE) {
    while($res = mssql_fetch_object($result)) {
      if($res->YearID = $YearID) {
        $num_curr = $res->NumMemberships;
      } elseif($res->YearID = ($YearID - 1)) {
        $num_last = $res->NumMemberships;
      }
    }
  }

  mssql_close();

  drupal_set_title($nicetitle);

  $output = theme("icuclub_club", array('clubcentre' => $centre, 'clubdesc' => $clubdesc, 'clubsection' => $sectioncode, 'clubsectionname' => $sectionname, 'clubemail' => $email, 'clubwebsite' => $website, 'clubhasimage' => true, 'clubcommittee' => $committee, 'clubcurrentmembers' => $num_curr, 'clublastmembers' => $num_last));
  return $output;
}

// Membership block - find clubs the current user is a member of
function block_icuclub_membership($delta) {
  icuclub_gen_memberships(); // Generate memberships, stored in a global variable for use later

  global $icuclub_memberships;

  // We generated this data earlier - we do this because we may need this data on a page that the block is not visible on
  $output = theme("icuclub_block_memberships", array('clubs' => $icuclub_memberships));
  return $output;
}

// Club A-Z block
function block_icuclub_atoz($delta) {
  // this is similar to the A-Z page

  // See if we have got a cached copy of the A-Z, if we do, no point checking NewERPOL as this is time consuming
  if(!cache_get('icuclub_cache_atoz')) {
    // If we dont have a cache'd set, generate cache
    icuclub_genatoz();

    // If we don't have a cached thing, db down, no block
    if(!is_object(cache_get('icuclub_cache_atoz'))) {
      return; // will hide block
    }
  }

  // No matter what happened before, we should have a cache now
  $cache = cache_get('icuclub_cache_atoz')->data;

  if(!is_array($cache)) {
    // No societies/some other error
    return; // DON'T return not found, just do nothing and the block won't show
  }

  $societies = $cache;

  // Now put these into A-Z arrays
  $letters = array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z');

  $final_societies = array();
  foreach($societies as $society) {
    // Check if we are alphanumeric, if not we go in the hash letter
    if(array_search(strtoupper($society['letter']), $letters) === FALSE) {
      $letter = '#';
    } else {
      $letter = strtoupper($society['letter']);
    }

    // See if an array for this letter exists
    if(!array_key_exists($letter, $final_societies)) {
      $final_societies[$letter] = array();
    }

    // Store society
    $final_societies[$letter][] = $society;
  }

  $output = theme("icuclub_block_atoz", array('atozclubs' => $final_societies));
  return $output;
}

// Generate the A-Z cache
function icuclub_genatoz() {
  if(!erpol_connect()) {
    return; //db down
  }

  // Get the club name, centre, and category
  // Now get all clubs which are active
  $sql = "
SELECT [OCNames].[OCNameTypeName]
      ,[CurrClubHealth].[Centre]
      ,[ProfileCategories].[ProfileCatDesc]      ,[Years].[YearID]
      ,[Years].[YearStart]
      ,[Years].[YearEnd]FROM [CurrClubHealth]  INNER JOIN [PreviousProfiles] ON [CurrClubHealth].[OCID] = [PreviousProfiles].[OCID]	INNER JOIN [OCNames] ON [CurrClubHealth].[OCID] = [OCNames].[OCID]	INNER JOIN [Years] ON [PreviousProfiles].[YearID] = [Years].[YearID]
  LEFT OUTER JOIN [ProfileCategories] ON [ProfileCategories].[ProfileCatID] = [PreviousProfiles].[ProfileCategoryID]WHERE [CurrClubHealth].[StatusDesc] = 'Active'	AND [OCNames].[OCNameTypeId] = '1'	AND [Years].[YearID] = '22'";

  // Remove unwanted clubs specified in config
  if(variable_get('icuclub_filter') != '' && variable_get('icuclub_filter') != NULL) {
    $filters = explode(',', variable_get('icuclub_filter'));

    foreach($filters as $filter) {
      if(!is_numeric($filter)): continue; endif; // Only numeric centres (i.e. no D/U etc.)
      $sql .= "AND [CurrClubHealth].[Centre] != '$filter'";
    }
  }

  $result = mssql_query($sql);
  if($result === TRUE || $result === FALSE) {
      // No societies found (unlikely!!)
      return;
  }

  $societies = array();

  // For every society, strip out the management group and store in the final array
  while($res = mssql_fetch_object($result)) {
    if(!is_numeric($res->Centre)): continue; endif; // Only numeric centres (i.e. no D/U etc.)

    $YearEnd = $res->YearEnd;
    $YearStart = $res->YearStart;
    $nicetitle = $res->OCNameTypeName;

    if($res->ProfileCatDesc == NULL) {
      $sectionname = "Unknown club type";
      $sectioncode = 'unknown';
    } else {
      $sectionname = $res->ProfileCatDesc;
      $sectioncode = strtolower(str_replace(' ', '_', str_replace('&', '_', $sectionname)));
    }

    // nonalphabetical letters become hash
    $letters = array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z');
    $letter = $nicetitle[0];

    if(array_search(strtoupper($letter), $letters) === FALSE) {
      $letter = '#';
    }

    $societies[strtolower($nicetitle).'_'.$res->Centre] = array('centre' => $res->Centre, 'name' => $nicetitle, 'letter' => $letter, 'sectionname' => $sectionname, 'sectioncode' => $sectioncode);
  }

  // Sort alphabetically
  ksort($societies);

  cache_set('icuclub_cache_atoz', $societies, "cache", strtotime($YearEnd));
}

/**
 * @} End of "defgroup icuclub".
 */
